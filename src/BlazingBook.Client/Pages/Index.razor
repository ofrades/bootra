@page "/"
@inject HttpClient HttpClient
@inject OrderState OrderState
@inject Blazored.Localisation.Services.IBrowserDateTimeProvider browserDateTimeProvider

<AuthorizeView>
  <Authorized>

    <SideBar />

    <div class="main">

    <Column ColumnSize="ColumnSize.Is4" Class="text-center mx-auto">
        <SearchBox SearchQueryChanged="Search"/>
    </Column>
    @if(!OrderState.isClose){
        <ApiBooks isAuthorized="true"/>
    }

    @if (OrderState.Bookbases == null) {
        <Loading></Loading>
    } else {
        <Books isAuthorized="true"/>
    }

    </div>

</Authorized>
<NotAuthorized>
    <div class="main">
    <p class="text-center mt-2 text-danger">You are not allowed to buy any books, please login!</p>

    <Column ColumnSize="ColumnSize.Is4" Class="text-center mx-auto">
        <SearchBox SearchQueryChanged="Search"/>
    </Column>
    @if(!OrderState.isClose){
        <ApiBooks isNotAuthorized="true"/>
    }

    @if (OrderState.Bookbases == null) {
        <Loading></Loading>
    } else {
        <Books isNotAuthorized="true"/>
    }

    </div>
</NotAuthorized>
</AuthorizeView>

<TemplatedDialog Show="OrderState.ShowingConfigureDialog">
<ConfigureBookDialog
    BookCustom="OrderState.ConfiguringBook"
    OnCancel="OrderState.CancelConfigureBookDialog"
    OnConfirm="OrderState.ConfirmConfigureBookDialog" />
</TemplatedDialog>

@code {

    async Task Search(string query) {
        await OrderState.SearchBooks(query);
    }

    protected async override Task OnInitializedAsync() {
        OrderState.OnChange += StateHasChanged;
        await OrderState.GetWishes();
        await OrderState.GetBooks();
        await OrderState.GetBasketList();
    }
    protected override void OnParametersSet() {
        OrderState.OnChange += StateHasChanged;
    }
    public void Dispose() {
        OrderState.OnChange -= StateHasChanged;
    }
}
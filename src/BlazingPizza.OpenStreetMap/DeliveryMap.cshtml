@inject IJSRuntime JSRuntime

<div id="@elementId" style="height: 100%; width: 100%;">
</div>

@functions {
    string elementId = $"map-{Guid.NewGuid().ToString("D")}";

    [Parameter] Point Center { get; set; }
    [Parameter] double Zoom { get; set; }

    [Parameter] Marker Start { get; set; }
    [Parameter] Marker End { get; set; }
    [Parameter] Marker Driver { get; set; }

    bool initializedMap;

    protected async override Task OnAfterRenderAsync()
    {
        // After we render, make sure the map is initialized for this element
        if (!initializedMap)
        {
            await JSRuntime.InvokeAsync<object>("deliveryMap.initialize", elementId);
            await JSRuntime.InvokeAsync<object>("deliveryMap.setView", elementId, Center, Zoom);
            await JSRuntime.InvokeAsync<object>("deliveryMap.setMarkers", elementId, new Marker[] { Start, End, });

            initializedMap = true;
        }

        // If we already intialized the map, then all we need to do update the position of the driver.
        await JSRuntime.InvokeAsync<object>("deliveryMap.setDriverMarker", elementId, Driver);
    }
}
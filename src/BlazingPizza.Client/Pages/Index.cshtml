@page "/"

<div class="main px-4">
    <ul class="pizza-cards">
        @for (var i = 0; i < 10; i++)
        {
            <li onclick="@ShowConfigurePizzaDialog" style="background-image: url('img/pizzas/pizza-1.jpg')">
                <div class="pizza-info">
                    <span class="title">Placeholder Supreme</span>
                    Made out of real pizza™
                    <span class="price">15.49</span>
                </div>
            </li>
        }
    </ul>
</div>
<div class="sidebar">
    <div class="order-contents px-4">
        <h2>Your order</h2>

        @foreach (var configuredPizza in configuredPizzas)
        {
            <ConfiguredPizzaItem Pizza="configuredPizza" OnRemoved="() => RemoveConfiguredPizza(configuredPizza)" />
        }

    </div>
    <div class="order-total px-4">
        Total:
        <span class="total-price">@OrderPrice.ToString("0.00")</span>
        <button class="btn btn-danger" disabled="@(configuredPizzas.Count == 0)">
            Order >
        </button>
    </div>
</div>

@if (showConfigurePizzaDialog)
{
    <ConfigurePizzaDialog
        Pizza="@pizza"
        OnCancel="@CancelConfigurePizzaDialog" 
        OnConfirm="@ConfirmConfigurePizzaDialog" />
}

@functions {
    bool showConfigurePizzaDialog;
    Pizza pizza;

    List<Pizza> configuredPizzas = new List<Pizza>();

    decimal OrderPrice => configuredPizzas.Sum(p => p.GetTotalPrice());

    void ShowConfigurePizzaDialog()
    {
        // TODO: replace this with real data we show the specials on this 
        pizza = new Pizza()
        {
            Special = new PizzaSpecial()
            {
                Id = 0,
                Name = "Placeholder supreme",
                Description = "Just a placeholder, hold your horses!",
                BasePrice = 11.99m,
            },
            SpecialId = 0,
            Size = PizzaSize.Medium,
            Toppings = new List<PizzaTopping>()
            {
                new PizzaTopping()
                {
                    Topping = new Topping()
                    {
                        Name = "Donuts",
                        Price = 1.99m,
                    },
                },
            },
        };

        showConfigurePizzaDialog = true;
        StateHasChanged();
    }

    void CancelConfigurePizzaDialog()
    {
        pizza = null;

        showConfigurePizzaDialog = false;
        StateHasChanged();
    }

    void ConfirmConfigurePizzaDialog()
    {
        configuredPizzas.Add(pizza);
        pizza = null;

        showConfigurePizzaDialog = false;
        StateHasChanged();
    }

    void RemoveConfiguredPizza(Pizza pizza)
    {
        configuredPizzas.Remove(pizza);
        StateHasChanged();
    }
}
